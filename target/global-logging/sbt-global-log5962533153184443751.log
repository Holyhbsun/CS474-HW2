[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Holy\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Holy\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.2 (Amazon.com Inc. Java 1.8.0_382)
[debug]       Load.loadUnit: plugins took 114.759ms
[debug]       Load.loadUnit: defsScala took 0.2975ms
[debug] [Loading] Scanning directory C:\Users\Holy\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Holy\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.1182 ms
[debug]           Load.resolveProject(global-plugins) took 46.6671ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Holy\.sbt\1.0\plugins, plugins: List(<none>))) took 88.926ms
[debug] [Loading] Done in C:\Users\Holy\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 108.4944ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2706ms
[debug]     Load.loadUnit(file:/C:/Users/Holy/.sbt/1.0/plugins/, ...) took 230.7058ms
[debug]   Load.apply: load took 544.9289ms
[debug]   Load.apply: resolveProjects took 6.0171ms
[debug]   Load.apply: finalTransforms took 52.0414ms
[debug]   Load.apply: config.delegates took 9.0698ms
[debug]   Load.apply: Def.make(settings)... took 357.482ms
[debug]   Load.apply: structureIndex took 82.18ms
[debug]   Load.apply: mkStreams took 1.7648ms
[info] loading global plugins from C:\Users\Holy\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2801.8605ms
[debug]           Load.loadUnit: plugins took 30.1425ms
[debug]           Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory D:\CS474-HW2\project
[debug]             Load.loadUnit: mkEval took 6.9184ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\CS474-HW2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.0171 ms
[info] loading settings for project cs474-hw2-build from idea.sbt ...
[debug]               Load.resolveProject(cs474-hw2-build) took 2.4243ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cs474-hw2-build, base: D:\CS474-HW2\project, plugins: List(<none>))) took 4.9829ms
[debug] [Loading] Done in D:\CS474-HW2\project, returning: (cs474-hw2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2235.7233ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.6809ms
[debug]         Load.loadUnit(file:/D:/CS474-HW2/project/, ...) took 2270.2547ms
[debug]       Load.apply: load took 2271.0432ms
[debug]       Load.apply: resolveProjects took 0.0906ms
[debug]       Load.apply: finalTransforms took 6.2389ms
[debug]       Load.apply: config.delegates took 0.2808ms
[debug]       Load.apply: Def.make(settings)... took 85.5695ms
[debug]       Load.apply: structureIndex took 18.4287ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from D:\CS474-HW2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4146.7351ms
[debug]     Load.loadUnit: defsScala took 0.008ms
[debug] [Loading] Scanning directory D:\CS474-HW2
[debug]       Load.loadUnit: mkEval took 0.5666ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6261 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 43.8904ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\CS474-HW2, plugins: List(<none>))) took 47.4693ms
[debug] [Loading] Done in D:\CS474-HW2, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1695.2526ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.9305ms
[debug]   Load.loadUnit(file:/D:/CS474-HW2/, ...) took 5848.7998ms
[debug] Load.apply: load took 5850.0568ms
[debug] Load.apply: resolveProjects took 0.1338ms
[debug] Load.apply: finalTransforms took 29.2464ms
[debug] Load.apply: config.delegates took 0.328ms
[debug] Load.apply: Def.make(settings)... took 79.8123ms
[debug] Load.apply: structureIndex took 25.8116ms
[debug] Load.apply: mkStreams took 0.0059ms
[info] set current project to CS474-HW2 (in build file:/D:/CS474-HW2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50343 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50343, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to CS474-HW2 (in build file:/D:/CS474-HW2/)
[debug] > Exec(idea-shell, None, None)
